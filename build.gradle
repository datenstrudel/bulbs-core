buildscript{
    repositories {
        mavenCentral()
    }
    dependencies{
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE")
        classpath 'org.ajoberstar:gradle-git:1.1.0'
    }
}


import org.ajoberstar.grgit.*
import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id "com.eriwen.gradle.js" version "1.12.1"
    id "com.eriwen.gradle.css" version "1.11.1"
}
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'spring-boot'

group = 'net.datenstrudel.bulbs'
archivesBaseName = "bulbs-core"
version = '1.0-SNAPSHOT'
description = """A Domestic light control middleware capable of running on single board computers."""

sourceCompatibility = 1.8
targetCompatibility = 1.8

def getBranchName() {
    ext.repo = Grgit.open(project.file('.'))
    def rev = repo.head().id
    return rev
}
ext{
    springVersion = '4.1.0.RELEASE'
    springBootVersion = '1.1.9.RELEASE'
    revision = getBranchName()

    jsSrcDir = "src/main/resources/static/bulbsCore/js"
    cssSrcDir = "src/main/resources/static/bulbsCore/css"
}

sourceSets {
    integTest {
        java.srcDir file('src/integration-test/java')
        resources.srcDir file('src/integration-test/resources')
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + compileClasspath
    }
}

task integTest(type: Test) {
    testClassesDir = sourceSets.integTest.output.classesDir
    classpath = sourceSets.integTest.runtimeClasspath
    jvmArgs '-Duser.timezone=UTC'
}

test{
    jvmArgs '-Duser.timezone=UTC'
}
bootRun {
    jvmArgs = ["-Duser.timezone=UTC"]
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        url 'http://oss.sonatype.org/content/repositories/snapshots'
    }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://maven.springframework.org/milestone" }
    maven { url "https://maven.alfresco.com/nexus/content/groups/public/" }
    maven { url "http://repo.maven.apache.org/maven2" }
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: springBootVersion
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb', version: springBootVersion
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: springBootVersion) {
        exclude(module: 'spring-jdbc')
    }
    compile group: 'net.datenstrudel.bulbs', name: 'bulbs-shared', version: '1.3-SNAPSHOT'
    compile group: 'javax.persistence', name: 'persistence-api', version: '1.0'
    compile group: 'javax.inject', name: 'javax.inject', version: '1'
    compile(group: 'org.springframework', name: 'spring-context', version: springVersion) {
        exclude(module: 'commons-logging')
    }
    compile group: 'org.springframework', name: 'spring-messaging', version: springVersion
    compile group: 'org.springframework', name: 'spring-context-support', version: springVersion
    compile group: 'org.springframework', name: 'spring-web', version: springVersion
    compile group: 'org.springframework', name: 'spring-webmvc', version: springVersion
    compile group: 'org.springframework', name: 'spring-websocket', version: springVersion
    compile group: 'javax.websocket', name: 'javax.websocket-api', version: '1.0'
    compile group: 'org.projectreactor', name: 'reactor-core', version: '1.0.0.RELEASE'
    compile group: 'org.springframework.data', name: 'spring-data-mongodb', version: '1.5.4.RELEASE'
    compile group: 'org.springframework', name: 'spring-aspects', version: springVersion
    compile group: 'org.springframework', name: 'spring-aop', version: springVersion
    compile group: 'org.springframework.amqp', name: 'spring-rabbit', version: '1.2.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-test', version: '4.0.3.RELEASE'
    compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.2.0'
    compile group: 'org.hibernate', name: 'hibernate-validator', version: '4.3.1.Final'
    compile group: 'org.apache.httpcomponents', name: 'httpclient-cache', version: '4.3'
    compile group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.3'
    compile(group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3') {
        exclude(module: 'commons-logging')
    }
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.1'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.2.4'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.2'
    compile group: 'org.aspectj', name: 'aspectjrt', version: '1.8.0.RELEASE'
    compile group: 'org.aspectj', name: 'aspectjtools', version: '1.8.0.RELEASE'
    compile group: 'commons-io', name: 'commons-io', version: '1.2'
    compile group: 'org.mongeez', name: 'mongeez', version: '0.9.3'
    compile group: 'com.mangofactory', name: 'swagger-springmvc', version: '1.0.0'
    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion) {
        exclude(module: 'commons-logging')
    }
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testCompile group: 'junit', name: 'junit', version: '4.10'
    testCompile group: 'org.easymock', name: 'easymock', version: '3.2'
    testCompile group: 'org.easymock', name: 'easymockclassextension', version: '3.2'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.16'
    testCompile group: 'cglib', name: 'cglib-nodep', version: '2.2'
    testCompile group: 'org.objenesis', name: 'objenesis', version: '1.2'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'

    integTestCompile sourceSets.main.output
    integTestCompile configurations.testCompile
    integTestCompile sourceSets.test.output
    integTestRuntime configurations.testRuntime
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.apache.tomcat.embed') {
            details.useVersion '8.0.8'
        }
    }
}

processResources {
    exclude '**/*.properties'
}

task('filterCopy', type: Copy) {
    from "src/main/resources"
    into "${buildDir}/resources/main"
    include '**/*.properties'
    filter ReplaceTokens, tokens: [
            "application.version": project.property("version"),
            "project.archivesBaseName": project.property("archivesBaseName"),
            "project.description": project.property("description"),
            "project.version"    : project.property("version"),
            "project.revision"   : project.property("revision")
    ]
}
processResources.dependsOn filterCopy

//~ Javascript resource processing
combineJs {
    source = [
            "${jsSrcDir}/lib/angular.js",
            "${jsSrcDir}/lib/d3/d3.v3.min.js",
            "${jsSrcDir}/lib/bootstrap.min.js",
            "${jsSrcDir}/lib/bootstrap-modal.js",
            "${jsSrcDir}/lib/angular-resource.min.js",
            "${jsSrcDir}/lib/angular-animate.min.js",
            "${jsSrcDir}/lib/angular-route.min.js",
            "${jsSrcDir}/lib/3rdparty/sockjs/sockjs.js",
            "${jsSrcDir}/lib/3rdparty/stomp/dist/stomp.min.js",
            "${jsSrcDir}/appCore/appCore.js",
            "${jsSrcDir}/appCore/controllers.js",
            "${jsSrcDir}/appCore/directives.js",
            "${jsSrcDir}/appCore/filters.js",
            "${jsSrcDir}/appCore/services.js",
            "${jsSrcDir}/appCore/utils/ColorConverter.js",
            "${jsSrcDir}/appCore/widgets/ColorSelector_Circle.js",
            "${jsSrcDir}/appCore/widgets/ColorSelector_Circle_Hsb.js",
            "${jsSrcDir}/appCore/widgets/LinechartSelector.js",
            "${jsSrcDir}/appCore/widgets/SliderBar.js"
    ]
    source.each{ logger.info ("$it") }
    dest = file("${buildDir}/resources/main/static/bulbsCore/js/bulbs-core-webApp.js")
}
minifyJs {
    source = combineJs
    dest = file("${buildDir}/resources/main/static/bulbsCore/js/bulbs-core-webApp.min.js")
    closure.compilationLevel = 'WHITESPACE_ONLY'
    closure {
        warningLevel = 'QUIET'
        externs = files("${jsSrcDir}/lib/jquery-2.0.2.min.js")
        compilerOptions.languageIn = "ECMASCRIPT5"
    }
}
processResources.dependsOn minifyJs
assemble.dependsOn minifyJs

//~ CSS resource processing
combineCss {
    source = [
        "${cssSrcDir}/lib/bootstrap/bootstrap.css",
        "${cssSrcDir}/lib/iconmoon/style.css",
        "${cssSrcDir}/core/app.css",
        "${cssSrcDir}/identity/login.css"
    ]
    dest = file("${buildDir}/resources/main/static/bulbsCore/css/bulbs-core-styles.css")
}

minifyCss {
    source = combineCss
    dest = file("${buildDir}/resources/main/static/bulbsCore/css/bulbs-core-styles.min.css")
    yuicompressor { // Optional
        lineBreakPos = -1
    }
}

processResources.dependsOn minifyCss
assemble.dependsOn minifyCss

