buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath "org.springframework.build.gradle:propdeps-plugin:${springGradlePropDepPlugin}"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'org.ajoberstar:gradle-git:1.1.0'
    }
}

plugins {
    id "com.eriwen.gradle.js" version "1.12.1"
    id "com.eriwen.gradle.css" version "1.11.1"
}

import org.ajoberstar.grgit.Grgit
import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'
apply plugin: 'idea'

apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'
apply plugin: 'propdeps-eclipse'

group = 'net.datenstrudel.bulbs'
archivesBaseName = "bulbs-core"
version = '1.0-SNAPSHOT'
description = """A Domestic light control middleware capable of running on single board computers."""

sourceCompatibility = 1.8
targetCompatibility = 1.8

def getBranchName() {
    ext.repo = Grgit.open(project.file('.'))
    def rev = repo.head().id
    return rev
}

ext {
    springVersion = '4.1.0.RELEASE'
    revision = getBranchName()
    buildNumber = project.hasProperty('buildNumber') ? project.getProperty('buildNumber') : '[build unknown]'
    buildPlatform = project.hasProperty('buildPlatform') ? project.getProperty('buildPlatform') : 'x86'

    jsSrcDir = "src/main/resources/static/bulbsCore/js"
    cssSrcDir = "src/main/resources/static/bulbsCore/css"
}

apply from: 'docker.gradle'

sourceSets {
    integTest {
        java.srcDir file('src/integTest/java')
        resources.srcDir file('src/integTest/resources')
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + compileClasspath
        compileClasspath += sourceSets.main.runtimeClasspath
    }
}

configurations {
    integTestCompile
    integTestCompile.extendsFrom(testCompile)
}

bootRun {
    jvmArgs = ["-Duser.timezone=UTC"]
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        url 'http://oss.sonatype.org/content/repositories/snapshots'
    }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://maven.springframework.org/milestone" }
    maven { url "https://maven.alfresco.com/nexus/content/groups/public/" }
    maven { url "http://repo.maven.apache.org/maven2" }
}

dependencies {
    compile group: 'net.datenstrudel.bulbs', name: 'bulbs-shared', version: '1.3-SNAPSHOT'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter', version: springBootVersion
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: springBootVersion
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb', version: springBootVersion
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: springBootVersion) {
        exclude(module: 'spring-jdbc')
    }
    compile("org.springframework.boot:spring-boot-starter-amqp:${springBootVersion}")
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-websocket', version: springBootVersion
    compile group: 'org.springframework', name: 'spring-context-support'
    optional "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
    compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.2.0'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.1'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.2.4'
    compile group: 'org.aspectj', name: 'aspectjrt', version: '1.8.0.RELEASE'
    compile group: 'org.aspectj', name: 'aspectjtools', version: '1.8.0.RELEASE'
    compile group: 'commons-io', name: 'commons-io', version: '1.2'
    compile group: 'org.mongeez', name: 'mongeez', version: '0.9.3'
    compile group: 'com.mangofactory', name: 'swagger-springmvc', version: '1.0.0'

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion
    testCompile group: 'org.easymock', name: 'easymock', version: '3.2'
    testCompile group: 'org.easymock', name: 'easymockclassextension', version: '3.2'

    integTestCompile sourceSets.main.output
    integTestCompile sourceSets.test.output
    integTestCompile configurations.testCompile
    integTestRuntime configurations.testRuntime
}

task integTest(type: Test) {
    group = 'verification'
    testClassesDir = sourceSets.integTest.output.classesDir
    classpath = sourceSets.integTest.runtimeClasspath
    jvmArgs '-Duser.timezone=UTC'
    systemProperty 'user.timezone', 'UTC'
    include '**/*IT*'
    include '**/*AT*'
}

test {
    exclude '**/*IT*'
    systemProperty 'user.timezone', 'UTC'
    jvmArgs '-Duser.timezone=UTC'
}

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

//~ Javascript resource processing /////////////////////////////////////////////////
combineJs {
    source = [
            "${jsSrcDir}/lib/angular.js",
            "${jsSrcDir}/lib/d3/d3.v3.min.js",
            "${jsSrcDir}/lib/bootstrap.min.js",
            "${jsSrcDir}/lib/bootstrap-modal.js",
            "${jsSrcDir}/lib/angular-resource.min.js",
            "${jsSrcDir}/lib/angular-animate.min.js",
            "${jsSrcDir}/lib/angular-route.min.js",
            "${jsSrcDir}/lib/3rdparty/sockjs/sockjs.js",
            "${jsSrcDir}/lib/3rdparty/stomp/dist/stomp.min.js",
            "${jsSrcDir}/appCore/appCore.js",
            "${jsSrcDir}/appCore/controllers.js",
            "${jsSrcDir}/appCore/directives.js",
            "${jsSrcDir}/appCore/filters.js",
            "${jsSrcDir}/appCore/services.js",
            "${jsSrcDir}/appCore/utils/ColorConverter.js",
            "${jsSrcDir}/appCore/widgets/ColorSelector_Circle.js",
            "${jsSrcDir}/appCore/widgets/ColorSelector_Circle_Hsb.js",
            "${jsSrcDir}/appCore/widgets/LinechartSelector.js",
            "${jsSrcDir}/appCore/widgets/SliderBar.js"
    ]
    source.each { logger.info("$it") }
    dest = file("${buildDir}/resources/main/static/bulbsCore/js/bulbs-core-webApp.js")
}

minifyJs {
    source = combineJs
    dest = file("${buildDir}/resources/main/static/bulbsCore/js/bulbs-core-webApp.min.js")
    closure.compilationLevel = 'WHITESPACE_ONLY'
    closure {
        warningLevel = 'QUIET'
        externs = files("${jsSrcDir}/lib/jquery-2.0.2.min.js")
        compilerOptions.languageIn = "ECMASCRIPT5"
    }
}

//~ CSS resource processing
combineCss {
    source = [
            "${cssSrcDir}/lib/bootstrap/bootstrap.css",
            "${cssSrcDir}/lib/iconmoon/style.css",
            "${cssSrcDir}/core/app.css",
            "${cssSrcDir}/identity/login.css"
    ]
    dest = file("${buildDir}/resources/main/static/bulbsCore/css/bulbs-core-styles.css")
}

minifyCss {
    source = combineCss
    dest = file("${buildDir}/resources/main/static/bulbsCore/css/bulbs-core-styles.min.css")
    yuicompressor { // Optional
        lineBreakPos = -1
    }
}

assemble.dependsOn minifyJs
assemble.dependsOn minifyCss

processResources.dependsOn minifyJs
processResources.dependsOn minifyCss

processResources {
    filesMatching('**/application.properties') {
        filter ReplaceTokens, tokens: [
                "application.version"     : project.property("version"),
                "project.archivesBaseName": project.property("archivesBaseName"),
                "project.description"     : project.property("description"),
                "project.version"         : project.property("version"),
                "project.revision"        : project.property("revision"),
                "project.buildNumber"     : project.property("buildNumber")
        ]
    }
}

compileJava.dependsOn(processResources)

